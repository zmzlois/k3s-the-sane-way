---
- name: Install Supabase
  hosts: server
  become: true
  gather_facts: true
  tasks:
    - name: Install Supabase
      kubernetes.core.helm:
        name: supabase
        chart_repo_url: https://github.com/supabase-community/supabase-kubernetes/charts/supabase/
        chart_ref: supabase
        release_namespace: supabase
        create_namespace: true
        release_name: supabase
        values:
          secret:
            jwt:
              anonKey: "{{ supabase_jwt_anon_key }}"
              serviceKey: "{{ supabase_jwt_service_key }}"
              secret: "{{ supabase_jwt_secret }}"
            smtp:
              username: "{{ email }}"
              password: "{{ supabase_smtp_password }}"
            dashboard:
              username: "{{ supabase_dashboard_username }}"
              password: "{{ supabase_dashboard_password }}"
            db:
              username: postgres
              password: "{{ supabase_db_password }}"
              database: postgres
            analytics:
              apiKey: "{{ supabase_analytics_apikey }}"

          db:
            enabled: true
            image:
              tag: 15.1.0.147
            livenessProbe:
              exec:
                command:
                  - pg_isready
                  - -U
                  - postgres
              initialDelaySeconds: 3
            persistence:
              enabled: false

          studio:
            image:
              tag: 20240326-5e5586d
            environment:
              STUDIO_DEFAULT_ORGANIZATION: "My Organization"
              STUDIO_DEFAULT_PROJECT: "My Project"
              SUPABASE_PUBLIC_URL: "{{ supabase_public_url }}"
              NEXT_PUBLIC_ENABLE_LOGS: "true"
            livenessProbe:
              httpGet:
                path: /api/profile
                port: 3000
              initialDelaySeconds: 3

          auth:
            image:
              tag: v2.143.0
            environment:
              API_EXTERNAL_URL: "{{ supabase_auth_api_external_url }}"
              GOTRUE_SITE_URL: "{{ supabase_gotrue_site_url }}"
              GOTRUE_EXTERNAL_EMAIL_ENABLED: "true"
              GOTRUE_MAILER_AUTOCONFIRM: "true"
              GOTRUE_SMTP_ADMIN_EMAIL: "{{ email }}"
              GOTRUE_SMTP_HOST: "{{ gotrue_smtp_host }}"
              GOTRUE_SMTP_PORT: "587"
              GOTRUE_SMTP_SENDER_NAME: "{{ email }}"

          rest:
            image:
              tag: v12.0.1

          realtime:
            image:
              tag: v2.27.5
            livenessProbe:
              httpGet:
                path: /
                port: 4000
              initialDelaySeconds: 3

          meta:
            image:
              tag: v0.80.0

          storage:
            image:
              tag: v0.46.4
            livenessProbe:
              httpGet:
                path: /status
                port: 5000
              initialDelaySeconds: 3
            persistence:
              enabled: false

          imgproxy:
            image:
              tag: v3.8.0
            environment:
              IMGPROXY_ENABLE_WEBP_DETECTION: "true"
            livenessProbe:
              exec:
                command:
                  - imgproxy
                  - health
              initialDelaySeconds: 3
            persistence:
              enabled: false

          kong:
            image:
              repository: kong
              tag: 2.8.1
            environment:
              KONG_DECLARATIVE_CONFIG: /usr/local/kong/kong.yml
              KONG_LOG_LEVEL: info
            ingress:
              enabled: true
              className: "traefik"
              annotations:
                cert-manager.io/cluster-issuer: "letsencrypt-staging"
                kubernetes.io/tls-acme: "true"
              tls:
                []
                # - secretName: example-ingress-tls
                #   hosts:
                #     - example.com
              hosts:
                - host: "{{ supabase_host }}"
                  paths:
                    - path: /
                      pathType: Prefix

          analytics:
            image:
              tag: 1.4.0
            livenessProbe:
              httpGet:
                path: /health
                port: 4000
              initialDelaySeconds: 3

          vector:
            image:
              tag: 0.34.0-alpine
            livenessProbe:
              httpGet:
                path: /health
                port: 9001
              initialDelaySeconds: 3
            ## Vector requires logs from the control plane to function.
            ## This is normally stored in /var/log/pods
            ## Modify these values according to your environment.
            volumeMounts:
              - name: pod-logs
                mountPath: /var/log/pods
            volumes:
              - name: pod-logs
                hostPath:
                  path: /var/log/pods

          functions:
            image:
              tag: v1.41.2
